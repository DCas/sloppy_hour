require 'date_extensions'

class DealOccurrence < ActiveRecord::Base
  belongs_to :deal, foreign_key: :schedulable_id

  default_scope { order('date ASC') }
  scope :remaining, lambda{where(["date >= ?",Time.now])} #generated by schedulable gem
  scope :previous, lambda{where(["date < ?",Time.now])} #generated by schedulable gem
  
  scope :on_date, -> (date){ where(:date => date.all_day) }

  def to_icecube
    IceCube::Occurrence.new(deal.schedule.start_time, deal.schedule.end_time)
  end

  def start_time
    t = deal.start_time
    date.change(hour: t.hour, min: t.min, sec: t.sec)
  end

  def end_time
    t = deal.end_time
    s = start_time
    e = date.change(hour: t.hour, min: t.min, sec: t.sec)
    if s > e
      e = e + 1.day
    end
    e
  end

end
